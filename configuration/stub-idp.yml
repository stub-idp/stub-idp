server:
  applicationConnectors:
    - type: http
      port: ${PORT:-50140}
  adminConnectors:
    - type: http
      port: 50141

  requestLog:
    type: classic
    appenders:
      - type: console

assertionLifetime: 60m

saml:
  entityId: ${ENTITY_ID:-"http://stub_idp.acme.org/%s/SSO/POST"}
  expectedDestination: ${EXPECTED_DESTINATION:-"http://localhost:50140"}

serviceInfo:
  name: stub-idp

logging:
  level: ${LOG_LEVEL:-INFO}
  appenders:
    - type: console

signingKeyPairConfiguration:
  privateKeyConfiguration:
    type: ${KEY_TYPE:-file}
    key: ${STUB_IDP_SIGNING_PRIVATE_KEY:-configuration/data/pki/stub_idp_signing_primary.pk8}
  publicKeyConfiguration:
    type: ${CERT_TYPE:-file}
    cert: ${STUB_IDP_SIGNING_CERT:-configuration/data/pki/stub_idp_signing_primary.crt}
    name: idp.signing.cert

idpMetadataSigningKeyPairConfiguration:
  privateKeyConfiguration:
    type: ${KEY_TYPE:-file}
    key: ${STUB_IDP_METADATA_SIGNING_PRIVATE_KEY:-configuration/data/pki/metadata_signing_a.pk8}
  publicKeyConfiguration:
    type: ${CERT_TYPE:-file}
    cert: ${STUB_IDP_METADATA_SIGNING_CERT:-configuration/data/pki/metadata_signing_a.crt}
    name: idp.signing.cert

basicAuthEnabledForUserResource: ${STUB_IDP_BASIC_AUTH:-true}

stubIdpsYmlFileLocation: ${STUB_IDPS_FILE_PATH:-configuration/configured-idps/stub-idps.yml}
stubIdpYmlFileRefresh: 10s

metadata:
  client:
    timeout: 60s
    timeToLive: 10m
    connectionTimeout: 4s
    tls:
      protocol: TLSv1.2
      verifyHostname: false
  uri: ${METADATA_URL:-http://localhost:40000/stub/sp/SAML2/metadata/federation}
  spTrustStore:
    type: ${TRUSTSTORE_TYPE:-file}
    store: ${SP_TRUSTSTORE:-configuration/data/pki/sp.ts}
    password: ${TRUSTSTORE_PASSWORD:-marshmallow}
  trustStore:
    type: ${TRUSTSTORE_TYPE:-file}
    store: ${METADATA_TRUSTSTORE:-configuration/data/pki/metadata.ts}
    password: ${TRUSTSTORE_PASSWORD:-marshmallow}
  minRefreshDelay: 30000
  maxRefreshDelay: 1800000
  expectedEntityId: ${METADATA_ENTITY_ID:-"http://stub_sp.acme.org/%s/SSO/POST"}

europeanIdentity:
  enabled: ${EUROPEAN_IDENTITY_ENABLED:-true}
  hubConnectorEntityId: ${HUB_CONNECTOR_ENTITY_ID:-http://localhost/does/not/exist}
  stubCountryBaseUrl: ${STUB_IDP_HOSTNAME:-"http://localhost"}
  metadata:
    jerseyClientName: connector-metadata-client
    client:
      timeout: 60s
      timeToLive: 10m
      connectionTimeout: 4s
      tls:
        protocol: TLSv1.2
        verifyHostname: false
    uri: ${CONNECTOR_NODE_METADATA_URI:-http://localhost/does/not/exist}
    spTrustStore:
      type: ${TRUSTSTORE_TYPE:-file}
      store: ${SP_TRUSTSTORE:-configuration/data/pki/sp.ts}
      password: ${TRUSTSTORE_PASSWORD:-marshmallow}
    trustStore:
      type: ${TRUSTSTORE_TYPE:-file}
      store: ${METADATA_TRUSTSTORE:-configuration/data/pki/metadata.ts}
      password: ${TRUSTSTORE_PASSWORD:-marshmallow}
    minRefreshDelay: 30000
    maxRefreshDelay: 1800000
    expectedEntityId: ${HUB_CONNECTOR_ENTITY_ID:-http://localhost/does/not/exist}
  signingKeyPairConfiguration:
    privateKeyConfiguration:
      type: ${KEY_TYPE:-file}
      key: ${STUB_COUNTRY_SIGNING_PRIVATE_KEY:-configuration/data/pki/stub_idp_signing_primary.pk8}
    publicKeyConfiguration:
      type: ${CERT_TYPE:-file}
      cert: ${STUB_COUNTRY_SIGNING_CERT:-configuration/data/pki/stub_idp_signing_primary.crt}
      name: stub_country_signing_cert

database:
# Ensure to run the application you have DB_URI
# Format for DB_URI: jdbc:postgresql://host-name:port/database-name?user=user-name&password=password
# example: jdbc:postgresql://localhost:5432/postgres?user=postgres&password=password
  url: ${DB_URI:-}

singleIdpJourney:
  enabled: ${SINGLE_IDP_FEATURE:-true}
  serviceListUri: ${SERVICE_LIST_URL:-http://localhost:40000/stub/sp/get-available-services}
  serviceListClient:
    timeout: 60s
    timeToLive: 10m
    connectionTimeout: 4s
  verifySubmissionUri: ${VERIFY_SUBMISSION_URL:-http://localhost:40000/stub/sp/initiate-single-idp-service}

isPrometheusEnabled: true
isHeadlessIdpEnabled: true
isIdpEnabled: true
dynamicReloadOfStubIdpYmlEnabled: true

secureCookieConfiguration:
    secure: true
    keyConfiguration:
      base64EncodedKey: cmljaw==

